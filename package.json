{
  "name": "fp-oneoff",
  "version": "1.0.0",
  "type": "module",
  "main": "./dist/index.js",
  "module": "./dist/index.js",
  "types": "./dist/index.d.ts",
  "exports": {
    ".": {
      "types": "./dist/index.d.ts",
      "import": "./dist/index.js",
      "default": "./dist/index.js"
    }
  },
  "files": [
    "dist/**",
    "README.md"
  ],
  "scripts": {
    "dev": "nodemon --exec ts-node src/index.ts",
    "build": "tsc -p .",
    "start": "node dist/index.js",
    "clean": "rm -rf dist",
    "check": "tsc --noEmit -p tsconfig.test.json",
    "typecheck": "tsc --noEmit",
    "examples": "ts-node scripts/run-examples.ts",
    "test": "vitest run --passWithNoTests",
    "test:watch": "vitest",
    "test:cps": "vitest run src/types/__tests__/cont.test.ts src/types/__tests__/cps.test.ts",
    "test:kan": "vitest run src/types/__tests__/ran-set.test.ts",
    "test:codensity": "vitest run src/types/__tests__/codensity-*.test.ts",
    "test:codensity:endX": "vitest run src/types/__tests__/codensity-endX.test.ts",
    "test:codensity:adjunction": "vitest run src/types/__tests__/codensity-adjunction.test.ts",
    "test:codensity:comma": "vitest run src/types/__tests__/codensity-comma-vs-end.test.ts",
    "test:finvect": "vitest run src/types/__tests__/finvect-double-dual.test.ts",
    "test:yoneda": "vitest run src/types/__tests__/yoneda.test.ts",
    "test:isbell": "vitest run src/types/__tests__/isbell-basic.test.ts",
    "test:cat2": "vitest run src/types/__tests__/cat2-basic.test.ts",
    "test:colim:finset": "vitest run src/types/__tests__/finset-colimits.test.ts",
    "test:colim:presheaf": "vitest run src/types/__tests__/presheaf-colimits.test.ts",
    "test:diagram": "vitest run src/types/__tests__/finset-diagram.test.ts",
    "test:psh:transport": "vitest run src/types/__tests__/presheaf-colimits-transport.test.ts",
    "test:psh:colim:transport": "vitest run src/types/__tests__/presheaf-colim-transport.test.ts",
    "test:psh:pushout:general": "vitest run src/types/__tests__/presheaf-pushout-general.test.ts",
    "test:psh:limit:general": "vitest run src/types/__tests__/presheaf-limit-general.test.ts",
    "test:dsl:shapes": "vitest run src/types/__tests__/dsl-shapes.test.ts",
    "test:dsl:psh": "vitest run src/types/__tests__/dsl-presheaf.test.ts",
    "test:dsl:extras": "vitest run src/types/__tests__/dsl-extras.test.ts",
    "test:adt": "vitest run src/types/__tests__/adt-list-tree.test.ts",
    "test:adt:schemes": "vitest run src/types/__tests__/adt-schemes.test.ts",
    "test:gadt": "vitest run src/types/__tests__/gadt-expr.test.ts",
    "test:adt:zygo-histo": "vitest run src/types/__tests__/adt-schemes.test.ts",
    "test:gadt:tmatch": "vitest run src/types/__tests__/gadt-tmatch.test.ts",
    "test:gadt:church": "vitest run src/gadt/__tests__/expr.gadt.church.test.ts",
    "test:gadt:term": "vitest run src/gadt/__tests__/term.fold.test.ts",
    "test:category:foundations": "vitest run src/category/__tests__/category-foundations.test.ts",
    "test:category:lan-gadt": "vitest run src/category/__tests__/lan-gadt-bridge.test.ts",
    "test:cat:eq": "vitest run src/category/__tests__/eq.test.ts",
    "test:cat:hfunctor": "vitest run src/category/__tests__/hfunctor.shim.test.ts",
    "test:cat:lan": "vitest run src/category/__tests__/lan.eq.test.ts",
    "test:cat:hcomp:lan": "vitest run src/category/__tests__/hcomp.lan.test.ts",
    "test:higher:hcata:compose": "vitest run src/higher/__tests__/hcata.compose.demo.test.ts",
    "test:grp:cat": "vitest run src/structures/group/__tests__/grp.category.test.ts",
    "test:group:quot": "vitest run src/structures/group/__tests__/quotient.zmod.test.ts",
    "test:group:trivial": "vitest run src/structures/group/__tests__/trivial.collapse.test.ts",
    "test:group:iso-u8": "vitest run src/structures/group/__tests__/iso.U8.vs.Z2Z2.test.ts",
    "test:group:hom-laws": "vitest run src/structures/group/__tests__/hom.category.laws.test.ts",
    "test:group:aut": "vitest run src/structures/group/__tests__/aut.small.test.ts",
    "test:group:theorem2": "vitest run src/structures/group/__tests__/theorem2_and_examples.test.ts",
    "test:group:subgroup": "vitest run src/structures/group/__tests__/subgroup.test.ts",
    "test:group:pairing": "vitest run src/structures/group/__tests__/product_pairing_isomorphism.test.ts",
    "test:group:quotient": "vitest run src/structures/group/__tests__/quotient_even_mod8.test.ts",
    "test:group:product-up": "vitest run src/structures/group/__tests__/product_universal_property.test.ts",
    "test:group:klein": "vitest run src/structures/group/__tests__/product_klein.test.ts",
    "test:group:cat-laws": "vitest run src/structures/group/__tests__/product_universal_property_laws.test.ts",
    "test:group:first-iso": "vitest run src/structures/group/__tests__/first_iso_parity.test.ts",
    "test:group:conjugation": "vitest run src/structures/group/__tests__/conjugation_auto.test.ts",
    "test:set:basics": "vitest run src/set/__tests__/set_fn.test.ts",
    "test:set:constructions": "vitest run src/set/__tests__/product_coproduct_quotient.test.ts",
    "test:group:endo": "vitest run src/structures/group/__tests__/end_units_aut.test.ts",
    "test:group:actions": "vitest run src/structures/group/__tests__/actions.test.ts",
    "test:group:GmodZ-Inn": "vitest run src/structures/group/__tests__/GmodZ_Inn.test.ts",
    "test:algebra:free-monoid-adj": "vitest run src/algebra/semiringlike/__tests__/free_monoid_adjunction.test.ts",
    "test:algebra:monoid-basics": "vitest run src/algebra/semiringlike/__tests__/monoid_basics.test.ts",
    "test:ab:abelian-biproduct": "vitest run src/structures/ab/__tests__/abelian_biproduct.test.ts",
    "test:ab:ker-coker-universal": "vitest run src/structures/ab/__tests__/ker_coker_universal.test.ts",
    "test:ab:hom-preadditive": "vitest run src/structures/ab/__tests__/hom_preadditive.test.ts",
    "test:ua:free-monoid-universal": "vitest run src/universal/__tests__/ua_free_monoid_universal.test.ts",
    "test:ua:equation-satisfaction": "vitest run src/universal/__tests__/ua_equation_satisfaction.test.ts",
    "test:group:aut-sizes": "vitest run src/structures/group/__tests__/aut_sizes.test.ts",
    "test:group:inn-vs-aut": "vitest run src/structures/group/__tests__/inn_vs_aut.test.ts",
    "check:trace": "node scripts/checkTraceIntegrity.js",
    "gadt:bfin": "vitest run src/gadt/basic/__tests__/bfin.test.ts",
    "gadt:bfin:lan": "vitest run src/gadt/basic/__tests__/bfin.lan.test.ts",
    "gadt:vec": "vitest run src/gadt/basic/__tests__/vec.test.ts",
    "adt:rose": "vitest run src/types/__tests__/adt-rose.test.ts",
    "adt:exprop": "vitest run src/types/__tests__/adt-expr-op.test.ts",
    "bicat": "vitest run src/types/__tests__/bicategory-coherence.test.ts",
    "topology:convergence": "vitest run src/types/__tests__/topology-convergence.test.ts",
    "ultrafilter": "vitest run src/types/__tests__/ultrafilter-principal.test.ts",
    "ultrafilter:em": "vitest run src/types/__tests__/em-algebra-discrete.test.ts",
    "ultrafilter:naturality": "vitest run src/types/__tests__/ultrafilter-naturality.test.ts",
    "topology": "vitest run src/types/__tests__/topology-basic.test.ts",
    "topology:product": "vitest run src/types/__tests__/topology-product.test.ts",
    "topology:and-agrees": "vitest run src/types/__tests__/topology-and-agrees.test.ts",
    "ultrafilter:demorgan": "vitest run src/types/__tests__/ultrafilter-demorgan.test.ts",
    "ultrafilter:distributivity": "vitest run src/types/__tests__/ultrafilter-distributivity.test.ts",
    "demo:cps": "node -e \"const { CPS } = require('./dist/types/index.js'); const id = x => x; const prog = CPS.reset(CPS.Cont.chain(x => CPS.Cont.of()(x + 1))(CPS.shift(k => k(5)))); console.log('shift/reset example =>', CPS.Cont.run(prog, id));\"",
    "demo:kan": "node -e \"const { Kan } = require('./dist/types/index.js'); console.log('Kan demo:'); Kan.demoKanExample();\"",
    "demo:product": "node -e \"const { Kan } = require('./dist/types/index.js'); console.log('Product demo: Discrete category gives product'); console.log('Available:', Object.keys(Kan).filter(k => k.includes('Ran')).join(', '));\"",
    "example:codensity": "ts-node --transpile-only src/examples/codensity-set.ts",
    "tracecheck": "ts-node --transpile-only scripts/tracecheck.ts",
    "math:opps": "ts-node --transpile-only scripts/mathopps.ts --diff",
    "math:build": "ts-node --transpile-only scripts/mathbuild.ts",
    "math:ci": "npm run math:build && npm run tracecheck && npm test",
    "bench:rel": "node scripts/run-rel-benchmark.js",
    "demo:em": "node scripts/run-em-demo.js",
    "prepublishOnly": "npm run check && npm run test && npm run build",
    "typecheck:src": "tsc --noEmit -p tsconfig.src.json",
    "typecheck:test": "tsc --noEmit -p tsconfig.test.json"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "description": "",
  "devDependencies": {
    "@types/node": "~24.3.0",
    "fast-glob": "^3.3.3",
    "glob": "^10.3.10",
    "nodemon": "^3.1.10",
    "ts-node": "^10.9.2",
    "tsx": "^4.20.5",
    "typescript": "~5.9.2",
    "vitest": "~2.0.0"
  }
}
